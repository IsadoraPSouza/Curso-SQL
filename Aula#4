-- criando a tabela sem padronizar 
CREATE TABLE EsTaDo(
/*
no windows esta tabela ficará "estado" (lower_case_table_names 1)
no linux esta tabela ficará "EsTaDo" (lower_case_table_names 0)
*/
id INT NOT NULL AUTO_INCREMENT
,nome VARCHAR(200) NOT NULL UNIQUE  
,sigla CHAR(2) NOT NULL UNIQUE
,ativo ENUM('S','N') NOT NULL DEFAULT 'S'
,data_cadastro DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
,CONSTRAINT pk_estado PRIMARY KEY (id)  
);
  
INSERT INTO estado (nome,sigla) VALUES ('SÃO PAULO','SP'); -- windows → funciona   linux → dá erro

SELECT * FROM estado; -- windows → funciona   linux → dá erro
SELECT * FROM ESTADO; -- windows → funciona   linux → dá erro
SELECT * FROM Estado; -- windows → funciona   linux → dá erro
SELECT * FROM EsTaDo; -- windows → funciona   linux → funciona

DROP TABLE EsTaDo; 
-- eliminando a tabela para criar com padrão. Qual padrão? letras minúsculas para a definição do nome na criação da tabela e também na cosulta

CREATE TABLE estado( 
-- criando a tabela sem padronizar 

/*
no windows esta tabela ficará "estado"
no linux esta tabela ficará "estado"
*/
id INT NOT NULL AUTO_INCREMENT
,nome VARCHAR(200) NOT NULL UNIQUE  
,sigla CHAR(2) NOT NULL UNIQUE
,ativo ENUM('S','N') NOT NULL DEFAULT 'S'
,data_cadastro DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
,CONSTRAINT pk_estado PRIMARY KEY (id)  
);

-- adotando o padrão de usar letras minúscula irá funcionar independente do SO ou configuração
INSERT INTO estado (nome,sigla) VALUES ('SÃO PAULO','SP'); 	-- windows → funciona   linux → funciona
SELECT * FROM estado; 						-- windows → funciona   linux → funciona


CREATE TABLE categoria_produto( 
id INT AUTO_INCREMENT 
,nome VARCHAR(255) NOT NULL UNIQUE
,descricao VARCHAR(255) NOT NULL 
,data_cadastro DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
,ativo ENUM('S','N') NOT NULL DEFAULT 'S' 
,CONSTRAINT pk_catagoria_produto PRIMARY KEY (id)
);



-- >>> nome colunas sem o nome de tabela
DROP TABLE estado; -- eliminando a tabela 

-- muitas pessoas gostam de colocar o nome da tabela nas colunas
CREATE TABLE estado( 
id_estado INT NOT NULL AUTO_INCREMENT
,nome_estado VARCHAR(200) NOT NULL UNIQUE  
,sigla_estado CHAR(2) NOT NULL UNIQUE
,ativo_estado ENUM('S','N') NOT NULL DEFAULT 'S'
,data_cadastro_estado DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
,CONSTRAINT pk_estado PRIMARY KEY (id)  
);
-- colocando nome da tabela na coluna, quando realizamos uma consulta, a descrição da coluna fica bem clara!!!

SELECT nome_estado FROM estado; -- olhem o nome da coluna.. só de olhar sabemos que é da tabela estado...
-- SELECT nome FROM estado; → esta consulta seria sem colocar o nome da tabela na coluna, desta forma não fica tão claro!!!
-- porém, pelo menos para mim, colocar o nome da tabela na coluna é redundante... as colunas são do estado.. não é preciso colocar o nome da tabela na coluna para saber disto
-- assim, a minha sugestão é que NÃO coloque

DROP TABLE estado; -- eliminando a tabela 

CREATE TABLE estado( 
id INT NOT NULL AUTO_INCREMENT
,nome VARCHAR(200) NOT NULL UNIQUE  
,sigla CHAR(2) NOT NULL UNIQUE
,ativo ENUM('S','N') NOT NULL DEFAULT 'S'
,data_cadastro DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
,CONSTRAINT pk_estado PRIMARY KEY (id)  
);

-- e pra deixar a coluna clara basta inserir o nome da tabela na consulta
SELECT estado.nome FROM estado; -- fica claro da mesma forma, sem ser redundante

-- criando tabela cidade
CREATE TABLE cidade (
id INT NOT NULL AUTO_INCREMENT
,nome VARCHAR(200)  NOT NULL
,ativo ENUM('S','N') NOT NULL DEFAULT 'S' 
,data_cadastro DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
,estado_id INT NOT NULL 
,CONSTRAINT pk_cidade PRIMARY KEY (id)						-- definindo nome da regra PK
,CONSTRAINT fk_cidade_estado FOREIGN KEY (estado_id) REFERENCES estado (id)	-- definindo nome da regra PK
,CONSTRAINT cidade_unica UNIQUE(nome, estado_id)				-- definindo nome da regra PK
);

-- >>> valores de inserções em letras maiúsculas <<<
INSERT INTO estado (nome,sigla) VALUES ('PARANÁ','PR'); -- defina um padrão para os dados na inserção
SELECT * FROM estado WHERE nome = 'PARANÁ'; 		-- assim na consulta, saberá como escrever o filtro sem precisar usar funções para padronizar
